FORMAT: 1A
HOST: https://api.ciscospark.com/v1/

# Rooms

Rooms are virtual meeting places where people post messages and collaborate to get work done. This API is used to manage the rooms themselves. Rooms are created and deleted with this API. You can also update a room to change its title, for example.

To create a team room, specify the a `teamId` in the POST payload. Note that once a room is added to a team, it cannot be moved. To learn more about managing teams, see the [Teams API](/docs/teams/api/v1/teams).

To manage people in a room see the [Memberships API](/docs/teams/api/v1/memberships).

To post content see the [Messages API](/docs/teams/api/v1/messages).

## Rooms Collection [/rooms]

### List Rooms [GET /rooms{?teamId,type,sortBy,max}]

List rooms.

The `title` of the room for 1-to-1 rooms will be the display name of the other person.

By default, lists rooms to which the authenticated user belongs.

Long result sets will be split into [pages](/docs/teams/api/basics#pagination).

+ Request

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

+ Parameters

    + teamId: `Y2lzY29zcGFyazovL3VzL1JPT00vNjRlNDVhZTAtYzQ2Yi0xMWU1LTlkZjktMGQ0MWUzNDIxOTcz` (string, optional) - List rooms associated with a team, by ID.
    + type: `group` (string, optional) - List rooms by type.
        + Members
            + direct - 1-to-1 rooms
            + group - group rooms
    + sortBy: `id` (string, optional) - Sort results.
        + Members
            + id - sort by `roomId`
            + lastactivity - sort by most recent activity
            + created - sort by created date
    + max: `1000` (number, optional) - Limit the maximum number of rooms in the response.
        + Default: 1000

+ Response 200 (application/json)

    + Attributes (Room Collection Response)

    + Headers

            Link: <https://api.ciscospark.com/v1/rooms?max=10&before&after=Y2lzY29zcGFyazovL3VzL1BFT1BMRS83MTZlOWQxYy1jYTQ0LTRmZWQtOGZjYS05ZGY0YjRmNDE3ZjU>; rel="next"

### Create a Room [POST /rooms]

Creates a room. The authenticated user is automatically added as a member of the room. See the [Memberships API](/docs/teams/api/v1/memberships) to learn how to add more people to the room.

To create a 1-to-1 room, use the [Create Messages](/docs/teams/api/v1/messages-post) endpoint to send a message directly to another person by using the `toPersonId` or `toPersonEmail` parameters.

+ Request (application/json)

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

    + Attributes
        + title: `Project Unicorn - Sprint 0` (string, required) - A user-friendly name for the room.
        + teamId: `Y2lzY29zcGFyazovL3VzL1JPT00vNjRlNDVhZTAtYzQ2Yi0xMWU1LTlkZjktMGQ0MWUzNDIxOTcz` (string, optional) - The ID for the team with which this room is associated.

+ Response 200 (application/json)

    + Attributes (Room)

### Get Room Details [GET /rooms/{roomId}]

Shows details for a room, by ID.

The `title` of the room for 1-to-1 rooms will be the display name of the other person.

Specify the room ID in the `roomId` parameter in the URI.

+ Request

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

+ Parameters

    + roomId: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string, required) - The unique identifier for the room.

+ Response 200 (application/json)

    + Attributes (Room)

### Update a Room [PUT /rooms/{roomId}]

Updates details for a room, by ID.

Specify the room ID in the `roomId` parameter in the URI.

+ Parameters

    + roomId: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string, required) - The unique identifier for the room.

+ Request (application/json)

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

    + Attributes
        + title: `Project Unicorn - Sprint 0` (string, required) - A user-friendly name for the room.

+ Response 200 (application/json)

    + Attributes (Room)

### Delete a Room [DELETE /rooms/{roomId}]

Deletes a room, by ID. Deleted rooms cannot be recovered.

Deleting a room that is part of a team will archive the room instead.

Specify the room ID in the `roomId` parameter in the URI.

+ Request

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

+ Parameters

    + roomId: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string, required) - The unique identifier for the room.

+ Response 204 (application/json)

# Data Structures

## Room (object)

+ id: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string) - A unique identifier for the room.
+ title: `Project Unicorn - Sprint 0` (string) - A user-friendly name for the room.
+ type: `group` (enum) - The room type.
    + Members
        + direct - 1-to-1 room
        + group - group room
+ isLocked: `true` (boolean) - Whether the room is moderated (locked) or not.
+ teamId: `Y2lzY29zcGFyazovL3VzL1JPT00vNjRlNDVhZTAtYzQ2Yi0xMWU1LTlkZjktMGQ0MWUzNDIxOTcz` (string) - The ID for the team with which this room is associated.
+ lastActivity: `2016-04-21T19:12:48.920Z` (string) - The date and time of the room's last activity.
+ created: `2016-04-21T19:01:55.966Z` (string) - The date and time the room was created.

## Room Collection Response (object)

+ items (array[Room])