FORMAT: 1A
HOST: https://api.ciscospark.com/v1/

# Messages

Messages are how we communicate in a room. In Webex Teams, each message is displayed on its own line along with a timestamp and sender information. Use this API to list, create, and delete messages.

Message can contain plain text, [rich text](/docs/teams/api/basics#formatting-messages), and a [file attachment](/docs/teams/api/basics#file-attachments).

Just like in the Webex Teams app, you must be a member of the room in order to target it with this API.

## Messages Collection [/messages]

### List Messages [GET /messages{?roomId,mentionedPeople,before,beforeMessage,max}]

Lists all messages in a room.  Each message will include content attachments if present.

The list sorts the messages in descending order by creation date.

Long result sets will be split into [pages](/docs/teams/api/basics#pagination).

+ Request

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

+ Parameters

    + roomId: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string, optional) - List messages in a room, by ID.
    + mentionedPeople: `Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yNDlmNzRkOS1kYjhhLTQzY2EtODk2Yi04NzllZDI0MGFjNTM` (array) - List messages with these people mentioned, by ID. Use `me` as a shorthand for the current API user.
    + before: `2016-04-21T19:01:55.966Z` (string) - List messages sent before a date and time.
    + beforeMessage: `Y2lzY29zcGFyazovL3VzL01FU1NBR0UvOTJkYjNiZTAtNDNiZC0xMWU2LThhZTktZGQ1YjNkZmM1NjVk` (string) - List messages sent before a message, by ID.
    + max: `1000` (number, optional) - Limit the maximum number of messages in the response.
        + Default: 1000

+ Response 200 (application/json)

    + Attributes (Message Collection Response)

    + Headers

            Link: <https://api.ciscospark.com/v1/messages?roomId=Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0&beforeMessage=Y2lzY29zcGFyazovL3VzL01FU1NBR0UvOTJkYjNiZTAtNDNiZC0xMWU2LThhZTktZGQ1YjNkZmM1NjVk&max=10>; rel="next"

### Create a Message [POST /messages]

Post a plain text or [rich text](/docs/teams/api/basics#formatting-messages) message, and optionally, a [file attachment](/docs/teams/api/basics#file-attachments) attachment, to a room.

The `files` parameter is an array, which accepts multiple values to allow for future expansion, but currently only one file may be included with the message.

+ Request (application/json)

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

    + Attributes
        + roomId: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string) - The room ID of the message.
        + toPersonId: `Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX` (string) - The person ID of the recipient when sending a private 1-to-1 message.
        + toPersonEmail: `julie@example.com` (string) - The email address of the recipient when sending a private 1-to-1 message.
        + text: `PROJECT UPDATE - A new project plan has been published on Box: http://box.com/s/lf5vj. The PM for this project is Mike C. and the Engineering Manager is Jane W.` (string) - The message, in plain text. If `markdown` is specified this parameter may be *optionally* used to provide alternate text for UI clients that do not support rich text.
        + markdown: `**PROJECT UPDATE** A new project plan has been published [on Box](http://box.com/s/lf5vj). The PM for this project is <@personEmail:mike@example.com> and the Engineering Manager is <@personEmail:jane@example.com>.` (string) - The message, in Markdown format.
        + files: `http://www.example.com/images/media.png"` (array) - The public URL to a binary file to be posted into the room. Only one file is allowed per message. Uploaded files are automatically converted into a format that all Webex Teams clients can render. For the supported media types and the behavior of uploads, see the [Message Attachments Guide](/docs/teams/api/basics#file-attachments).

+ Response 200 (application/json)

    + Attributes (Message)

### Get Message Details [GET /messages/{messageId}]

Shows details for a message, by message ID.

Specify the message ID in the `messageId` parameter in the URI.

+ Request

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

+ Parameters

    + messageId: `Y2lzY29zcGFyazovL3VzL01FU1NBR0UvOTJkYjNiZTAtNDNiZC0xMWU2LThhZTktZGQ1YjNkZmM1NjVk` (string, required) - The unique identifier for the message.

+ Response 200 (application/json)

    + Attributes (Message)

### Delete a Message [DELETE /messages/{messageId}]
Deletes a message, by message ID.

Specify the message ID in the `messageId` parameter in the URI.

+ Request

    + Headers

            Authorization: Bearer YOUR_AUTHORIZATION_TOKEN

+ Parameters

    + messageId: `Y2lzY29zcGFyazovL3VzL01FU1NBR0UvOTJkYjNiZTAtNDNiZC0xMWU2LThhZTktZGQ1YjNkZmM1NjVk` (string, required) - The unique identifier for the message.

+ Response 204 (application/json)

# Data Structures

## Message (object)

+ id: `Y2lzY29zcGFyazovL3VzL01FU1NBR0UvOTJkYjNiZTAtNDNiZC0xMWU2LThhZTktZGQ1YjNkZmM1NjVk` (string) - The unique identifier for the message.
+ roomId: `Y2lzY29zcGFyazovL3VzL1JPT00vYmJjZWIxYWQtNDNmMS0zYjU4LTkxNDctZjE0YmIwYzRkMTU0` (string) - The room ID of the message.
+ roomType: `group` (enum) - The type of room.
    + Members
        + direct - 1-to-1 room
        + group - group room
+ toPersonId: `Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX` (string) - The person ID of the recipient when sending a private 1-to-1 message.
+ toPersonEmail: `julie@example.com` (string) - The email address of the recipient when sending a private 1-to-1 message.
+ text: `PROJECT UPDATE - A new project plan has been published on Box: http://box.com/s/lf5vj. The PM for this project is Mike C. and the Engineering Manager is Jane W.` (string) - The message, in plain text. If `markdown` is specified this parameter may be *optionally* used to provide alternate text for UI clients that do not support rich text.
+ markdown: `**PROJECT UPDATE** A new project plan has been published [on Box](http://box.com/s/lf5vj). The PM for this project is <@personEmail:mike@example.com> and the Engineering Manager is <@personEmail:jane@example.com>.` (string) - The message, in Markdown format.
+ files: `http://www.example.com/images/media.png"` (array) - The public URL to a binary file to be posted into the room. Only one file is allowed per message. Uploaded files are automatically converted into a format that all Webex Teams clients can render. For the supported media types and the behavior of uploads, see the [Message Attachments Guide](/docs/teams/api/basics#file-attachments).
+ personId: `Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY` (string) - The personId of the message author.
+ personEmail: `matt@example.com` (string) - The email address of the message author.
+ created: `2015-10-18T14:26:16+00:00` (string) - The date and time the message was created.
+ mentionedPeople: `Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yNDlmNzRkOS1kYjhhLTQzY2EtODk2Yi04NzllZDI0MGFjNTM`, `Y2lzY29zcGFyazovL3VzL1BFT1BMRS83YWYyZjcyYy0xZDk1LTQxZjAtYTcxNi00MjlmZmNmYmM0ZDg` (array) - People IDs for anyone mentioned in the message.
+ mentionedGroups: `all` (array) - Group names for the groups mentioned in the message.

## Message Collection Response (object)

+ items (array[Message])