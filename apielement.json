{
  "element": "parseResult",
  "content": [
    {
      "element": "category",
      "meta": {
        "classes": {
          "element": "array",
          "content": [
            {
              "element": "string",
              "content": "api"
            }
          ]
        },
        "title": {
          "element": "string",
          "content": "People"
        }
      },
      "attributes": {
        "meta": {
          "element": "array",
          "content": [
            {
              "element": "member",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "user"
                    }
                  ]
                }
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "FORMAT"
                },
                "value": {
                  "element": "string",
                  "content": "1A"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "user"
                    }
                  ]
                }
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "HOST"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.ciscospark.com/v1/"
                }
              }
            }
          ]
        }
      },
      "content": [
        {
          "element": "copy",
          "content": "People are registered users of the Spark application. Searching and viewing People requires an auth token with a scope of\n`spark:people_read`. Viewing the list of all People in your Organization requires an administrator auth token with `spark-admin:people_read`\nscope. Adding, updating, and removing People requires an administrator auth token with the `spark-admin:people_write` scope.\n\nTo learn more about managing people in a room see the [Memberships API]()."
        },
        {
          "element": "category",
          "meta": {
            "classes": {
              "element": "array",
              "content": [
                {
                  "element": "string",
                  "content": "resourceGroup"
                }
              ]
            },
            "title": {
              "element": "string",
              "content": ""
            }
          },
          "content": [
            {
              "element": "resource",
              "meta": {
                "title": {
                  "element": "string",
                  "content": "People Collection"
                }
              },
              "attributes": {
                "href": {
                  "element": "string",
                  "content": "/people"
                }
              },
              "content": [
                {
                  "element": "transition",
                  "meta": {
                    "title": {
                      "element": "string",
                      "content": "List People"
                    }
                  },
                  "attributes": {
                    "href": {
                      "element": "string",
                      "content": "/people{?email,displayName,orgId,max}"
                    },
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "List people with this email address. For non-admin requests, either this or displayName are required."
                            },
                            "title": {
                              "element": "string",
                              "content": "string"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "optional"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "email"
                            },
                            "value": {
                              "element": "string",
                              "content": "john.andersen@example.com"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "List people whose name starts with this string. For non-admin requests, either this or email are required."
                            },
                            "title": {
                              "element": "string",
                              "content": "string"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "optional"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "displayName"
                            },
                            "value": {
                              "element": "string",
                              "content": "John Andersen"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "List people in this organization. Only admin users of another organization (such as partners) may use this parameter."
                            },
                            "title": {
                              "element": "string",
                              "content": "string"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "optional"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "orgId"
                            },
                            "value": {
                              "element": "string",
                              "content": "``"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "Limit the maximum number of people in the response."
                            },
                            "title": {
                              "element": "string",
                              "content": "number"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "optional"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "max"
                            },
                            "value": {
                              "element": "string",
                              "attributes": {
                                "default": {
                                  "element": "string",
                                  "content": "1000"
                                }
                              },
                              "content": "1000"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "List people in your organization. For most users, either the email or a Display Name parameters are required. Admin users can omit\nthese fields and list all users in their organization."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": {
                              "element": "string",
                              "content": "GET"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Authorization"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "Bearer YOUR_AUTHORIZATION_TOKEN"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": {
                              "element": "string",
                              "content": "200"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "dataStructure",
                              "content": {
                                "element": "Person Collection Response"
                              }
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n  \"items\": [\n    {\n      \"id\": \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY\",\n      \"emails\": [\n        \"john.andersen@example.com\"\n      ],\n      \"displayName\": \"John Andersen\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Andersen\",\n      \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n      \"orgId\": \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n      \"roles\": [\n        \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n        \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n      ],\n      \"licenses\": [\n        \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n        \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n      ],\n      \"created\": \"2015-10-18T14:26:16+00:00\",\n      \"timezone\": \"America/Denver\",\n      \"lastActivity\": \"2015-10-18T14:26:16+00:00\",\n      \"status\": \"active\",\n      \"invitePending\": \"false\",\n      \"loginEnabled\": \"true\"\n    }\n  ]\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBodySchema"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/schema+json"
                                }
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"items\": {\n      \"type\": \"array\"\n    }\n  }\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": {
                      "element": "string",
                      "content": "Create a Person"
                    }
                  },
                  "attributes": {
                    "href": {
                      "element": "string",
                      "content": "/people"
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Create a new user account for a given organization. Only an admin can create a new user account.\n\nCurrently, users may have only one email address associated with their account. The `emails` parameter is an array, which accepts\nmultiple values to allow for future expansion, but currently only one email address will be used for the new user."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": {
                              "element": "string",
                              "content": "POST"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                },
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Authorization"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "Bearer YOUR_AUTHORIZATION_TOKEN"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n    \"emails\": [\n      \"john.smith@example.com\",\n      \"jsmith@example.com\"\n      ],\n    \"displayName\": \"John Smith\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n    \"orgId\" : \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n    \"roles\" : [ \n      \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n      \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n      ],\n    \"licenses\" : [\n      \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n      \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n      ]\n}\n"
                            }
                          ]
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": {
                              "element": "string",
                              "content": "200"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "dataStructure",
                              "content": {
                                "element": "Person"
                              }
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n  \"id\": \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY\",\n  \"emails\": [\n    \"john.andersen@example.com\"\n  ],\n  \"displayName\": \"John Andersen\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Andersen\",\n  \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n  \"orgId\": \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n  \"roles\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"licenses\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"created\": \"2015-10-18T14:26:16+00:00\",\n  \"timezone\": \"America/Denver\",\n  \"lastActivity\": \"2015-10-18T14:26:16+00:00\",\n  \"status\": \"active\",\n  \"invitePending\": \"false\",\n  \"loginEnabled\": \"true\"\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBodySchema"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/schema+json"
                                }
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier of the person\"\n    },\n    \"emails\": {\n      \"type\": \"array\",\n      \"description\": \"Array of email addresses\"\n    },\n    \"displayName\": {\n      \"type\": \"string\",\n      \"description\": \"Full name of the person\"\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"First name of the person\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"Last name of the person\"\n    },\n    \"avatar\": {\n      \"type\": \"string\",\n      \"description\": \"URL to the person's avatar in PNG format\"\n    },\n    \"orgId\": {\n      \"type\": \"string\",\n      \"description\": \"ID of the organization to which this person belongs\"\n    },\n    \"roles\": {\n      \"type\": \"array\",\n      \"description\": \"Array of role strings representing the roles to which this person belongs\"\n    },\n    \"licenses\": {\n      \"type\": \"array\",\n      \"description\": \"Array of license strings allocated to this person\"\n    },\n    \"created\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time the person was created\"\n    },\n    \"timezone\": {\n      \"type\": \"string\",\n      \"description\": \"Time zone of the person\"\n    },\n    \"lastActivity\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time of the person's last activity within Cisco Spark\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"description\": \"Current status of the person\"\n    },\n    \"invitePending\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not an invite is pending for user to complete account activation\"\n    },\n    \"loginEnabled\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not the user is allowed to use Cisco Spark\"\n    }\n  }\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": {
                      "element": "string",
                      "content": "Get Person Details"
                    }
                  },
                  "attributes": {
                    "href": {
                      "element": "string",
                      "content": "/people/{personId}"
                    },
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "Unique identifier for the person"
                            },
                            "title": {
                              "element": "string",
                              "content": "string"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "required"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "personId"
                            },
                            "value": {
                              "element": "string",
                              "content": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Shows details for a person, by ID.\n\nSpecify the person ID in the `personId` parameter in the URI."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": {
                              "element": "string",
                              "content": "GET"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Authorization"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "Bearer YOUR_AUTHORIZATION_TOKEN"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": {
                              "element": "string",
                              "content": "200"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "dataStructure",
                              "content": {
                                "element": "Person"
                              }
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n  \"id\": \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY\",\n  \"emails\": [\n    \"john.andersen@example.com\"\n  ],\n  \"displayName\": \"John Andersen\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Andersen\",\n  \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n  \"orgId\": \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n  \"roles\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"licenses\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"created\": \"2015-10-18T14:26:16+00:00\",\n  \"timezone\": \"America/Denver\",\n  \"lastActivity\": \"2015-10-18T14:26:16+00:00\",\n  \"status\": \"active\",\n  \"invitePending\": \"false\",\n  \"loginEnabled\": \"true\"\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBodySchema"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/schema+json"
                                }
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier of the person\"\n    },\n    \"emails\": {\n      \"type\": \"array\",\n      \"description\": \"Array of email addresses\"\n    },\n    \"displayName\": {\n      \"type\": \"string\",\n      \"description\": \"Full name of the person\"\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"First name of the person\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"Last name of the person\"\n    },\n    \"avatar\": {\n      \"type\": \"string\",\n      \"description\": \"URL to the person's avatar in PNG format\"\n    },\n    \"orgId\": {\n      \"type\": \"string\",\n      \"description\": \"ID of the organization to which this person belongs\"\n    },\n    \"roles\": {\n      \"type\": \"array\",\n      \"description\": \"Array of role strings representing the roles to which this person belongs\"\n    },\n    \"licenses\": {\n      \"type\": \"array\",\n      \"description\": \"Array of license strings allocated to this person\"\n    },\n    \"created\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time the person was created\"\n    },\n    \"timezone\": {\n      \"type\": \"string\",\n      \"description\": \"Time zone of the person\"\n    },\n    \"lastActivity\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time of the person's last activity within Cisco Spark\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"description\": \"Current status of the person\"\n    },\n    \"invitePending\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not an invite is pending for user to complete account activation\"\n    },\n    \"loginEnabled\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not the user is allowed to use Cisco Spark\"\n    }\n  }\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": {
                      "element": "string",
                      "content": "Update a Person"
                    }
                  },
                  "attributes": {
                    "href": {
                      "element": "string",
                      "content": "/people/{personId}"
                    },
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "Unique identifier for the person"
                            },
                            "title": {
                              "element": "string",
                              "content": "string"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "required"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "personId"
                            },
                            "value": {
                              "element": "string",
                              "content": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Update details for a person, by ID.\n\nSpecify the person ID in the `personId` parameter in the URI. Only an admin can update a person details. Email addresses for a person\ncannot be changed via the Spark API.\n\nInclude all details for the person. This action expects all user details to be present in the request. A common approach is to first GET\nthe person's details, make changes, then PUT both the changed and unchanged values."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": {
                              "element": "string",
                              "content": "PUT"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                },
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Authorization"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "Bearer YOUR_AUTHORIZATION_TOKEN"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n    \"emails\": [\"john.smith@example.com\"],\n    \"displayName\": \"John Smith\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n    \"orgId\" : \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n    \"roles\" : [ \n      \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n      \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n      ],\n    \"licenses\" : [\n      \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n      \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n      ]\n}\n"
                            }
                          ]
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": {
                              "element": "string",
                              "content": "200"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "dataStructure",
                              "content": {
                                "element": "Person"
                              }
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n  \"id\": \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY\",\n  \"emails\": [\n    \"john.andersen@example.com\"\n  ],\n  \"displayName\": \"John Andersen\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Andersen\",\n  \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n  \"orgId\": \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n  \"roles\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"licenses\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"created\": \"2015-10-18T14:26:16+00:00\",\n  \"timezone\": \"America/Denver\",\n  \"lastActivity\": \"2015-10-18T14:26:16+00:00\",\n  \"status\": \"active\",\n  \"invitePending\": \"false\",\n  \"loginEnabled\": \"true\"\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBodySchema"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/schema+json"
                                }
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier of the person\"\n    },\n    \"emails\": {\n      \"type\": \"array\",\n      \"description\": \"Array of email addresses\"\n    },\n    \"displayName\": {\n      \"type\": \"string\",\n      \"description\": \"Full name of the person\"\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"First name of the person\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"Last name of the person\"\n    },\n    \"avatar\": {\n      \"type\": \"string\",\n      \"description\": \"URL to the person's avatar in PNG format\"\n    },\n    \"orgId\": {\n      \"type\": \"string\",\n      \"description\": \"ID of the organization to which this person belongs\"\n    },\n    \"roles\": {\n      \"type\": \"array\",\n      \"description\": \"Array of role strings representing the roles to which this person belongs\"\n    },\n    \"licenses\": {\n      \"type\": \"array\",\n      \"description\": \"Array of license strings allocated to this person\"\n    },\n    \"created\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time the person was created\"\n    },\n    \"timezone\": {\n      \"type\": \"string\",\n      \"description\": \"Time zone of the person\"\n    },\n    \"lastActivity\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time of the person's last activity within Cisco Spark\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"description\": \"Current status of the person\"\n    },\n    \"invitePending\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not an invite is pending for user to complete account activation\"\n    },\n    \"loginEnabled\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not the user is allowed to use Cisco Spark\"\n    }\n  }\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": {
                      "element": "string",
                      "content": "Delete a Person"
                    }
                  },
                  "attributes": {
                    "href": {
                      "element": "string",
                      "content": "/people/{personId}"
                    },
                    "hrefVariables": {
                      "element": "hrefVariables",
                      "content": [
                        {
                          "element": "member",
                          "meta": {
                            "description": {
                              "element": "string",
                              "content": "Unique identifier for the person"
                            },
                            "title": {
                              "element": "string",
                              "content": "string"
                            }
                          },
                          "attributes": {
                            "typeAttributes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "required"
                                }
                              ]
                            }
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "personId"
                            },
                            "value": {
                              "element": "string",
                              "content": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Remove a person from the system.\n\nOnly an admin can remove a person."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": {
                              "element": "string",
                              "content": "DELETE"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Authorization"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "Bearer YOUR_AUTHORIZATION_TOKEN"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": {
                              "element": "string",
                              "content": "204"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "element": "transition",
                  "meta": {
                    "title": {
                      "element": "string",
                      "content": "Get My Own Details"
                    }
                  },
                  "attributes": {
                    "href": {
                      "element": "string",
                      "content": "/people/me"
                    }
                  },
                  "content": [
                    {
                      "element": "copy",
                      "content": "Show the profile for the authenticated user. This is the same as GET `/people/{personId}` using the Person ID associated with your Auth token."
                    },
                    {
                      "element": "httpTransaction",
                      "content": [
                        {
                          "element": "httpRequest",
                          "attributes": {
                            "method": {
                              "element": "string",
                              "content": "GET"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                },
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Authorization"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "Bearer YOUR_AUTHORIZATION_TOKEN"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": []
                        },
                        {
                          "element": "httpResponse",
                          "attributes": {
                            "statusCode": {
                              "element": "string",
                              "content": "200"
                            },
                            "headers": {
                              "element": "httpHeaders",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "Content-Type"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "application/json"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "dataStructure",
                              "content": {
                                "element": "Person"
                              }
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBody"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/json"
                                }
                              },
                              "content": "{\n  \"id\": \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY\",\n  \"emails\": [\n    \"john.andersen@example.com\"\n  ],\n  \"displayName\": \"John Andersen\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Andersen\",\n  \"avatar\": \"https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600\",\n  \"orgId\": \"OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh\",\n  \"roles\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"licenses\": [\n    \"Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy\",\n    \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX\"\n  ],\n  \"created\": \"2015-10-18T14:26:16+00:00\",\n  \"timezone\": \"America/Denver\",\n  \"lastActivity\": \"2015-10-18T14:26:16+00:00\",\n  \"status\": \"active\",\n  \"invitePending\": \"false\",\n  \"loginEnabled\": \"true\"\n}"
                            },
                            {
                              "element": "asset",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "messageBodySchema"
                                    }
                                  ]
                                }
                              },
                              "attributes": {
                                "contentType": {
                                  "element": "string",
                                  "content": "application/schema+json"
                                }
                              },
                              "content": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier of the person\"\n    },\n    \"emails\": {\n      \"type\": \"array\",\n      \"description\": \"Array of email addresses\"\n    },\n    \"displayName\": {\n      \"type\": \"string\",\n      \"description\": \"Full name of the person\"\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"First name of the person\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"Last name of the person\"\n    },\n    \"avatar\": {\n      \"type\": \"string\",\n      \"description\": \"URL to the person's avatar in PNG format\"\n    },\n    \"orgId\": {\n      \"type\": \"string\",\n      \"description\": \"ID of the organization to which this person belongs\"\n    },\n    \"roles\": {\n      \"type\": \"array\",\n      \"description\": \"Array of role strings representing the roles to which this person belongs\"\n    },\n    \"licenses\": {\n      \"type\": \"array\",\n      \"description\": \"Array of license strings allocated to this person\"\n    },\n    \"created\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time the person was created\"\n    },\n    \"timezone\": {\n      \"type\": \"string\",\n      \"description\": \"Time zone of the person\"\n    },\n    \"lastActivity\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time of the person's last activity within Cisco Spark\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"description\": \"Current status of the person\"\n    },\n    \"invitePending\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not an invite is pending for user to complete account activation\"\n    },\n    \"loginEnabled\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"true\",\n        \"false\"\n      ],\n      \"description\": \"Whether or not the user is allowed to use Cisco Spark\"\n    }\n  }\n}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "element": "category",
          "meta": {
            "classes": {
              "element": "array",
              "content": [
                {
                  "element": "string",
                  "content": "dataStructures"
                }
              ]
            }
          },
          "content": [
            {
              "element": "dataStructure",
              "content": {
                "element": "object",
                "meta": {
                  "id": {
                    "element": "string",
                    "content": "Person"
                  }
                },
                "content": [
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Unique identifier of the person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "id"
                      },
                      "value": {
                        "element": "string",
                        "content": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mNWIzNjE4Ny1jOGRkLTQ3MjctOGIyZi1mOWM0NDdmMjkwNDY"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Array of email addresses"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "emails"
                      },
                      "value": {
                        "element": "array",
                        "content": [
                          {
                            "element": "string",
                            "content": "john.andersen@example.com"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Full name of the person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "displayName"
                      },
                      "value": {
                        "element": "string",
                        "content": "John Andersen"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "First name of the person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "firstName"
                      },
                      "value": {
                        "element": "string",
                        "content": "John"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Last name of the person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "lastName"
                      },
                      "value": {
                        "element": "string",
                        "content": "Andersen"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "URL to the person's avatar in PNG format"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "avatar"
                      },
                      "value": {
                        "element": "string",
                        "content": "https://1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "ID of the organization to which this person belongs"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "orgId"
                      },
                      "value": {
                        "element": "string",
                        "content": "OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Array of role strings representing the roles to which this person belongs"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "roles"
                      },
                      "value": {
                        "element": "array",
                        "content": [
                          {
                            "element": "string",
                            "content": "Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy"
                          },
                          {
                            "element": "string",
                            "content": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Array of license strings allocated to this person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "licenses"
                      },
                      "value": {
                        "element": "array",
                        "content": [
                          {
                            "element": "string",
                            "content": "Y2lzY29zcGFyazovL3VzL1JPT00vOGNkYzQwYzQtZjA5ZS0zY2JhLThjMjYtZGQwZTcwYWRlY2Iy"
                          },
                          {
                            "element": "string",
                            "content": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMDZkNzFhNS0wODMzLTRmYTUtYTcyYS1jYzg5YjI1ZWVlMmX"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Date and time the person was created"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "created"
                      },
                      "value": {
                        "element": "string",
                        "content": "2015-10-18T14:26:16+00:00"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Time zone of the person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "timezone"
                      },
                      "value": {
                        "element": "string",
                        "content": "America/Denver"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Date and time of the person's last activity within Cisco Spark"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "lastActivity"
                      },
                      "value": {
                        "element": "string",
                        "content": "2015-10-18T14:26:16+00:00"
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Current status of the person"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "status"
                      },
                      "value": {
                        "element": "enum",
                        "attributes": {
                          "enumerations": {
                            "element": "array",
                            "content": [
                              {
                                "element": "string",
                                "meta": {
                                  "description": {
                                    "element": "string",
                                    "content": "person is actively using Cisco Spark"
                                  }
                                },
                                "content": "active"
                              },
                              {
                                "element": "string",
                                "meta": {
                                  "description": {
                                    "element": "string",
                                    "content": "person is _not_ actively using Cisco Spark"
                                  }
                                },
                                "content": "inactive"
                              }
                            ]
                          },
                          "samples": {
                            "element": "array",
                            "content": []
                          }
                        },
                        "content": {
                          "element": "string",
                          "content": "active"
                        }
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Whether or not an invite is pending for user to complete account activation"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "invitePending"
                      },
                      "value": {
                        "element": "enum",
                        "attributes": {
                          "enumerations": {
                            "element": "array",
                            "content": [
                              {
                                "element": "string",
                                "meta": {
                                  "description": {
                                    "element": "string",
                                    "content": "invite pending"
                                  }
                                },
                                "content": "true"
                              },
                              {
                                "element": "string",
                                "meta": {
                                  "description": {
                                    "element": "string",
                                    "content": "an invite is not pending for this person"
                                  }
                                },
                                "content": "false"
                              }
                            ]
                          },
                          "samples": {
                            "element": "array",
                            "content": []
                          }
                        },
                        "content": {
                          "element": "string",
                          "content": "false"
                        }
                      }
                    }
                  },
                  {
                    "element": "member",
                    "meta": {
                      "description": {
                        "element": "string",
                        "content": "Whether or not the user is allowed to use Cisco Spark"
                      }
                    },
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "loginEnabled"
                      },
                      "value": {
                        "element": "enum",
                        "attributes": {
                          "enumerations": {
                            "element": "array",
                            "content": [
                              {
                                "element": "string",
                                "meta": {
                                  "description": {
                                    "element": "string",
                                    "content": "person _can_ log into Cisco Spark"
                                  }
                                },
                                "content": "true"
                              },
                              {
                                "element": "string",
                                "meta": {
                                  "description": {
                                    "element": "string",
                                    "content": "person _cannot_ log into Cisco Spark"
                                  }
                                },
                                "content": "false"
                              }
                            ]
                          },
                          "samples": {
                            "element": "array",
                            "content": []
                          }
                        },
                        "content": {
                          "element": "string",
                          "content": "true"
                        }
                      }
                    }
                  }
                ]
              }
            },
            {
              "element": "dataStructure",
              "content": {
                "element": "object",
                "meta": {
                  "id": {
                    "element": "string",
                    "content": "Person Collection Response"
                  }
                },
                "content": [
                  {
                    "element": "member",
                    "content": {
                      "key": {
                        "element": "string",
                        "content": "items"
                      },
                      "value": {
                        "element": "array",
                        "content": [
                          {
                            "element": "Person"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}